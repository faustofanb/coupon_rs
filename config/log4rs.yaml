refresh_rate: 60 seconds
  
appenders:
  console_appender:
    kind: console
    target: stdout
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S)} [{({l}):<5}] [{({T}):<15.15}] {({M}):<30.30}@{({L}):<4} >>> {m}{n}"

  http_requests_file:
    kind: rolling_file
    path: "logs/http_requests.log"
    encoder:
      # 这里的 pattern 会覆盖上面 stdout 的 pattern, 专用于 http_requests_file
      # 注意：Logger::new() 的格式化字符串决定了 {m} 的内容
      pattern: "{d(%Y-%m-%d %H:%M:%S)} {m}{n}" # 直接输出 Logger 中间件格式化好的消息
    policy:
      trigger:
        kind: size
        limit: 50 mb
      roller:
        kind: fixed_window
        base: 1
        count: 7
        pattern: "logs/http_requests.{}.log.gz"

  file_appender:
    kind: file
    path: "logs/application.log"
    append: true
    encoder:
      pattern: "{d} - {l} - {M} - {m}{n}"
    filters:
      - kind: threshold
        level: info

loggers:
  actix_web::middleware:
    level: info # 只记录 info 级别的请求日志
    appenders:
      - console_appender # 也输出到控制台
      - http_requests_file # 额外输出到专门的请求日志文件
    additive: false # false 表示这些日志不再传递给 root

root:
  level: info
  appenders:
    - console_appender
  
